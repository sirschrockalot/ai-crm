# Logstash Pipeline Configuration for DealCycle CRM
# This pipeline processes logs from all DealCycle services

input {
  # Collect logs from Docker containers
  beats {
    port => 5044
    type => "docker-logs"
  }
  
  # Collect application logs
  tcp {
    port => 5000
    type => "application-logs"
  }
  
  # Collect system logs
  file {
    path => "/var/log/system/*.log"
    type => "system-logs"
    start_position => "beginning"
  }
}

filter {
  # Parse JSON logs
  if [type] == "application-logs" {
    json {
      source => "message"
    }
    
    # Add service name based on log source
    if [container][name] =~ /backend/ {
      mutate {
        add_field => { "service" => "dealcycle-backend" }
      }
    } else if [container][name] =~ /frontend/ {
      mutate {
        add_field => { "service" => "dealcycle-frontend" }
      }
    } else if [container][name] =~ /mobile/ {
      mutate {
        add_field => { "service" => "dealcycle-mobile" }
      }
    }
    
    # Parse timestamp
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    
    # Add environment tag
    mutate {
      add_field => { "environment" => "development" }
    }
  }
  
  # Parse Docker logs
  if [type] == "docker-logs" {
    # Extract container information
    if [container] {
      mutate {
        add_field => { "container_id" => "%{[container][id]}" }
        add_field => { "container_name" => "%{[container][name]}" }
        add_field => { "container_image" => "%{[container][image][name]}" }
      }
    }
    
    # Parse JSON messages
    if [message] =~ /^\{.*\}$/ {
      json {
        source => "message"
      }
    }
  }
  
  # Parse system logs
  if [type] == "system-logs" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    }
    
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
  
  # Add common fields
  mutate {
    add_field => { "project" => "dealcycle-crm" }
    add_field => { "version" => "1.0.0" }
  }
  
  # Remove sensitive information
  mutate {
    remove_field => [ "password", "secret", "token", "key" ]
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "dealcycle-logs-%{+YYYY.MM.dd}"
    template_name => "dealcycle-logs"
    template => {
      "index_patterns" => ["dealcycle-logs-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" }
          "service" => { "type" => "keyword" }
          "level" => { "type" => "keyword" }
          "message" => { "type" => "text" }
          "container_name" => { "type" => "keyword" }
          "environment" => { "type" => "keyword" }
          "project" => { "type" => "keyword" }
          "version" => { "type" => "keyword" }
        }
      }
    }
  }
  
  # Send to stdout for debugging
  stdout {
    codec => rubydebug
  }
} 