services:
  # Authentication Service
  auth-service:
    build:
      context: ./src/auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongo:27017/dealcycle
    env_file:
      - ./src/auth-service/env.development
    volumes:
      - ./src/auth-service:/app
      - /app/node_modules
    networks:
      - dealcycle-network
    depends_on:
      - mongo
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_APP_NAME=DealCycle CRM
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    env_file:
      - .env
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    networks:
      - dealcycle-network
    depends_on:
      - auth-service

  # MongoDB Database (for future use if needed)
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=dealcycle
    volumes:
      - mongo_data:/data/db
    networks:
      - dealcycle-network
    # Security: Only expose to internal network
    expose:
      - "27017"

  # Redis Cache (for future use if needed)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - dealcycle-network
    # Security: Only expose to internal network
    expose:
      - "6379"

volumes:
  mongo_data:
  redis_data:

networks:
  dealcycle-network:
    driver: bridge 